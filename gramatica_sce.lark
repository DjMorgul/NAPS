// NAPS: The New Age PAW-like System - Herramientas para sistemas PAW-like
//
// Gramática para código fuente SCE multi-sistema
// Copyright (C) 2023-2024 José Manuel Ferrer Ortiz

start: _wsnl? (ctl _wsnl)? (tok _wsnl)? voc _wsnl stx _wsnl mtx _wsnl otx _wsnl ltx _wsnl con _wsnl obj _wsnl pros _wsnlc

COMMENT: ";" /[^\n]/*
SYMBOL: /[A-Z_a-z][0-9A-Z_a-z]*/
expression: SYMBOL _operations
_operations: (_WS? OPERATOR _WS? (SYMBOL | UINT))*
OPERATOR: "+" | "-"
_WS: (" " | "\t")+            // Espacio en blanco
_wsc: _WS? COMMENT?           // Posible espacio en blanco y/o comentario
_wsnl: (_WS? COMMENT? "\n")+  // Posible espacio en blanco y/o comentarios, y después nueva línea
_wsnlc: _wsnl? _wsc           // Posible espacio en blanco y/o comentarios
INT: /[+-]?[0-9]+/
UINT: /[0-9]+/
VOCWORD: /[^ _[;\n\t\/]/+
word: VOCWORD | "_"

ctl: _CTL (_wsnl /[A-Z]/)? _wsnl "_"  // (_wsnl /[A-Z]/) usado en Amstrad CPC para indicar la letra de unidad donde guardar la base de datos
_CTL: "/CTL"

tok: _TOK _wsnlc (_wsnl TOKEN)*
_TOK: "/TOK"
TOKEN: /[^ \n\t]/ /[^ \n\t]/+

voc: _VOC _wsnlc (_wsnl vocentry)*
_VOC: "/VOC"
vocentry: VOCWORD _WS UINT _WS voctype
voctype: ADJECTIVE | ADVERB | CONJUGATION | NOUN | PREPOSITION | PRONOUN | VERB
ADVERB: /adverb/i
ADJECTIVE: /adjective/i
CONJUGATION: /conjugation/i | /conjunction/i
NOUN: /noun/i
PREPOSITION: /preposition/i
PRONOUN: /pronoun/i
VERB: /verb/i

TEXTLINE: "\n" /[^\n\/][^\n]*/?
stxtextentry: "/" (UINT | expressionnomtx) _wsnlc TEXTLINE*
SYMBOLNOMTX: /(?!MTX)/ /[A-Z_a-z][0-9A-Z_a-z]*/
expressionnomtx: SYMBOLNOMTX _operations
mtxtextentry: "/" (UINT | expressionnootx) _wsnlc TEXTLINE*
SYMBOLNOOTX: /(?!OTX)/ /[A-Z_a-z][0-9A-Z_a-z]*/
expressionnootx: SYMBOLNOOTX _operations
otxtextentry: "/" (UINT | expressionnoltx) _wsnlc TEXTLINE*
SYMBOLNOLTX: /(?!LTX)/ /[A-Z_a-z][0-9A-Z_a-z]*/
expressionnoltx: SYMBOLNOLTX _operations
ltxtextentry: "/" (UINT | expressionnocon) _wsnlc TEXTLINE*
SYMBOLNOCON: /(?!CON)/ /[A-Z_a-z][0-9A-Z_a-z]*/
expressionnocon: SYMBOLNOCON _operations

stx: _STX _wsnlc ("\n" stxtextentry)*
_STX: "/STX"

mtx: _MTX _wsnlc ("\n" mtxtextentry)*
_MTX: "/MTX"

otx: _OTX _wsnlc ("\n" otxtextentry)*
_OTX: "/OTX"

ltx: _LTX _wsnlc ("\n" ltxtextentry)*
_LTX: "/LTX"

con: _CON _wsnlc (_wsnl conentry)*
_CON: "/CON"
conentry: "/" (SYMBOLNOOBJ | UINT) _wsnlc (_wsnl conitem)*
conitem: word _WS (SYMBOLNOOBJ | UINT)
SYMBOLNOOBJ: /(?!OBJ)/ /[A-Z_a-z][0-9A-Z_a-z]*/

obj: _OBJ _wsnlc (_wsnl objentry)*
_OBJ: "/OBJ"
objentry: "/" (SYMBOLNOPRO | UINT) _WS objinitial _WS OBJWEIGHT _WS attr _WS attr (_WS attr)* _WS word _WS word
SYMBOLNOPRO: /(?!PRO)/ /[A-Z_a-z][0-9A-Z_a-z]*/
objinitial: INT | CARRIED | WORN | "_" | SYMBOL
OBJWEIGHT: INT
attr: Y | "_"
Y: "Y"

CARRIED: "CARRIED"
HERE: "HERE"
WORN: "WORN"

pro: _PRO _WS (UINT | expression) _wsnlc (_wsnl procentry)*
pros: pro (_wsnl pro)*
_PRO: "/PRO"
procentry: word _WS word (_WS condact)? _wsnlc (_wsnl _WS condact)*
condact: CONDACTNAME param*
CONDACTNAME: /[A-Z][A-Z0-9]*/
indirection: "[" (UINT | expression) "]"
param: _WS (CARRIED | HERE | WORN | INT | expression | indirection | VOCWORD | "_")
